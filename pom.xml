<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ryber</groupId>
    <artifactId>generator</artifactId>
    <version>1</version>

    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
    </properties>

    <dependencies>
        <!-- https://mvnrepository.com/artifact/com.github.spullara.mustache.java/compiler -->
        <dependency>
            <groupId>com.github.spullara.mustache.java</groupId>
            <artifactId>compiler</artifactId>
            <version>0.9.10</version>
        </dependency>
        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
            <version>4.6.2</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <!-- Configured in pluginManagement instead of plugins, because we do not want a shaded parent POM -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.4</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <!-- Will output 2 jars: the original, and the shaded one -->
                            <shadedArtifactAttached>true</shadedArtifactAttached>

                            <!-- final name of the shaded jar will be ${project.artifactId}-standalone -->
                            <shadedClassifierName>standalone</shadedClassifierName>

                            <relocations>
                                <relocation>
                                    <pattern>com.github.mustachejava.</pattern>
                                    <shadedPattern>ryber.com.github.mustachejava.</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>picocli.</pattern>
                                    <shadedPattern>ryber.picocli.</shadedPattern>
                                </relocation>
                            </relocations>

                            <!-- NOTE: Any dependencies of the project will not show up in the standalone pom.
                            This means that if those dependencies are not properly relocated and there is a class-loading conflict,
                            user would not be able to figure out where the conflicting dependency is. -->
                            <createDependencyReducedPom>true</createDependencyReducedPom>

                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <!-- annotationProcessorPaths requires maven-compiler-plugin version 3.5 or higher -->
                <version>3.8.1</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                    <encoding>UTF-8</encoding>
                    <showWarnings>true</showWarnings>
                    <annotationProcessorPaths>
                        <path>
                            <groupId>info.picocli</groupId>
                            <artifactId>picocli-codegen</artifactId>
                            <version>4.6.2</version>
                        </path>
                    </annotationProcessorPaths>
                    <compilerArgs>
                        <arg>-Aproject=${project.groupId}/${project.artifactId}</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>